{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/model.service.ts","webpack:///src/app/model.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","modelService","model$","load","selector","templateUrl","styleUrls","AppModule","forRoot","initialNavigation","declarations","imports","providers","bootstrap","ModelService","http","get","pipe","classInfo","toModel","nodes","edges","current","lastNode","node","name","label","push","edge","source","target","base","providedIn","Model","clusters","environment","production","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Model } from './model';\nimport { ModelService } from './model.service';\n\n@Component({\n\tselector: 'visual-ts-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\tmodel$: Observable<Model>;\n\n\tconstructor(private modelService: ModelService) {}\n\n\tngOnInit(): void {\n\t\tthis.model$ = this.modelService.load();\n\t}\n}\n","<ngx-graph\n\tclass=\"chart-container\"\n\t[links]=\"(model$ | async).edges\"\n\t[nodes]=\"(model$ | async).nodes\"\n>\n\t<ng-template #nodeTemplate let-node>\n\t\t<svg:g>\n\t\t\t<rect\n\t\t\t\t[attr.rx]=\"node.dimension.height / 2\"\n\t\t\t\t[attr.ry]=\"node.dimension.height\"\n\t\t\t\t[attr.width]=\"node.dimension.width\"\n\t\t\t\t[attr.height]=\"node.dimension.height\"\n\t\t\t\tclass=\"node\"\n\t\t\t/>\n\t\t\t<svg:text\n\t\t\t\talignment-baseline=\"central\"\n\t\t\t\t[attr.x]=\"10\"\n\t\t\t\t[attr.y]=\"node.dimension.height / 2 + 5\"\n\t\t\t>\n\t\t\t\t{{ node.label }}\n\t\t\t</svg:text>\n\t\t</svg:g>\n\t</ng-template>\n</ngx-graph>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { AppComponent } from './app.component';\nimport { ModelService } from './model.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, RouterModule.forRoot([], { initialNavigation: 'enabled' }), NgxGraphModule],\n\tproviders: [ModelService],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ClassInfo } from '@visual-ts/api-interfaces';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Model } from './model';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ModelService {\n\tconstructor(private http: HttpClient) {}\n\n\tload(): Observable<Model> {\n\t\treturn this.http\n\t\t\t.get('http://localhost:3333/api/analysis?file=entityHub.ts&class=EntityHub')\n\t\t\t.pipe(map((classInfo) => this.toModel(classInfo as ClassInfo)));\n\t}\n\n\tprivate toModel(classInfo: ClassInfo): Model {\n\t\tconst nodes = [];\n\t\tconst edges = [];\n\t\tlet current = classInfo;\n\t\tlet lastNode = null;\n\t\twhile (current) {\n\t\t\tconst node = {\n\t\t\t\tid: current.name,\n\t\t\t\tlabel: current.name,\n\t\t\t};\n\n\t\t\tnodes.push(node);\n\n\t\t\tif (lastNode) {\n\t\t\t\tconst edge = {\n\t\t\t\t\tid: node.id + '-' + lastNode.id,\n\t\t\t\t\tsource: lastNode.id,\n\t\t\t\t\ttarget: node.id,\n\t\t\t\t};\n\t\t\t\tedges.push(edge);\n\t\t\t}\n\n\t\t\tlastNode = node;\n\t\t\tcurrent = current.base;\n\t\t}\n\n\t\treturn new Model(nodes, edges);\n\t}\n}\n","import { Node, Edge, ClusterNode } from '@swimlane/ngx-graph';\n\nexport class Model {\n\tconstructor(public readonly nodes: Node[], public readonly edges: Edge[], public readonly clusters?: ClusterNode[]) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch((err) => console.error(err));\n"]}