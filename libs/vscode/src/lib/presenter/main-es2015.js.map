{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/model.service.ts","./src/app/model.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGH;;;;;;;ICG7C,8DACC;IADD,oEACC;IAAA,qEAOA;IAAA,0EAKC;IAAA,uDACD;IAAA,4DAAW;IACZ,4DAAQ;;;IAbN,0DAAqC;IAArC,6FAAqC;IAQrC,0DAAa;IAAb,kEAAa;IAGb,0DACD;IADC,yFACD;;ADVI,MAAM,YAAY;IAGxB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,QAAQ;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;;wEAPW,YAAY;4FAAZ,YAAY;QCVzB,+EAKC;;;QAAA,oMACC;QAiBF,4DAAY;QAEZ,2EAA+B;;QAvB9B,oJAAgC;;6FDQpB,YAAY;cALxB,uDAAS;eAAC;gBACV,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACqB;AAChC;AACM;AACN;AACA;AACS;;;AAQjD,MAAM,SAAS;;wFAAT,SAAS,cAFT,2DAAY;4IAEZ,SAAS,mBAHV,CAAC,2DAAY,CAAC,YADhB,CAAC,uEAAa,EAAE,qEAAgB,EAAE,4FAAuB,EAAE,4DAAY,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC,EAAE,kEAAc,CAAC;mIAInI,SAAS,mBALN,2DAAY,aACjB,uEAAa,EAAE,qEAAgB,EAAE,4FAAuB,EAAE,8DAA4D,kEAAc;6FAIlI,SAAS;cANrB,sDAAQ;eAAC;gBACT,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE,CAAC,uEAAa,EAAE,qEAAgB,EAAE,4FAAuB,EAAE,4DAAY,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC,EAAE,kEAAc,CAAC;gBAC/I,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,SAAS,EAAE,CAAC,2DAAY,CAAC;aACzB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;AAGN;AACL;;;AAKzB,MAAM,YAAY;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,IAAI;QACH,OAAO,IAAI,CAAC,IAAI;aACd,GAAG,CAAC,sEAAsE,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAsB,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,OAAO,CAAC,SAAoB;QACnC,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,SAAS,CAAC;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,OAAO,OAAO,EAAE;YACf,MAAM,IAAI,GAAG;gBACZ,EAAE,EAAE,OAAO,CAAC,IAAI;gBAChB,KAAK,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC;YAEF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEjB,IAAI,QAAQ,EAAE;gBACb,MAAM,IAAI,GAAG;oBACZ,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE;oBAC/B,MAAM,EAAE,QAAQ,CAAC,EAAE;oBACnB,MAAM,EAAE,IAAI,CAAC,EAAE;iBACf,CAAC;gBACF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;YAED,QAAQ,GAAG,IAAI,CAAC;YAChB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;SACvB;QAED,OAAO,IAAI,4CAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;;wEApCW,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFZ,MAAM;6FAEN,YAAY;cAHxB,wDAAU;eAAC;gBACX,UAAU,EAAE,MAAM;aAClB;;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,KAAK;IACjB,YAA4B,KAAa,EAAkB,KAAa,EAAkB,QAAwB;QAAtF,UAAK,GAAL,KAAK,CAAQ;QAAkB,UAAK,GAAL,KAAK,CAAQ;QAAkB,aAAQ,GAAR,QAAQ,CAAgB;IAAG,CAAC;CACtH;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IAC1B,UAAU,EAAE,KAAK;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC3B,oEAAc,EAAE,CAAC;CACjB;AAED,2EAAwB,gBACP,CAAC,0DAAU;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Model } from './model';\nimport { ModelService } from './model.service';\n\n@Component({\n\tselector: 'visual-ts-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\tmodel$: Observable<Model>;\n\n\tconstructor(private modelService: ModelService) {}\n\n\tngOnInit(): void {\n\t\tthis.model$ = this.modelService.load();\n\t}\n}\n","<ngx-graph\n\tclass=\"chart-container\"\n\t[links]=\"(model$ | async).edges\"\n\t[nodes]=\"(model$ | async).nodes\"\n>\n\t<ng-template #nodeTemplate let-node>\n\t\t<svg:g>\n\t\t\t<rect\n\t\t\t\t[attr.rx]=\"node.dimension.height / 2\"\n\t\t\t\t[attr.ry]=\"node.dimension.height\"\n\t\t\t\t[attr.width]=\"node.dimension.width\"\n\t\t\t\t[attr.height]=\"node.dimension.height\"\n\t\t\t\tclass=\"node\"\n\t\t\t/>\n\t\t\t<svg:text\n\t\t\t\talignment-baseline=\"central\"\n\t\t\t\t[attr.x]=\"10\"\n\t\t\t\t[attr.y]=\"node.dimension.height / 2 + 5\"\n\t\t\t>\n\t\t\t\t{{ node.label }}\n\t\t\t</svg:text>\n\t\t</svg:g>\n\t</ng-template>\n</ngx-graph>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { AppComponent } from './app.component';\nimport { ModelService } from './model.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, RouterModule.forRoot([], { initialNavigation: 'enabled' }), NgxGraphModule],\n\tproviders: [ModelService],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ClassInfo } from '@visual-ts/api-interfaces';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Model } from './model';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ModelService {\n\tconstructor(private http: HttpClient) {}\n\n\tload(): Observable<Model> {\n\t\treturn this.http\n\t\t\t.get('http://localhost:3333/api/analysis?file=entityHub.ts&class=EntityHub')\n\t\t\t.pipe(map((classInfo) => this.toModel(classInfo as ClassInfo)));\n\t}\n\n\tprivate toModel(classInfo: ClassInfo): Model {\n\t\tconst nodes = [];\n\t\tconst edges = [];\n\t\tlet current = classInfo;\n\t\tlet lastNode = null;\n\t\twhile (current) {\n\t\t\tconst node = {\n\t\t\t\tid: current.name,\n\t\t\t\tlabel: current.name,\n\t\t\t};\n\n\t\t\tnodes.push(node);\n\n\t\t\tif (lastNode) {\n\t\t\t\tconst edge = {\n\t\t\t\t\tid: node.id + '-' + lastNode.id,\n\t\t\t\t\tsource: lastNode.id,\n\t\t\t\t\ttarget: node.id,\n\t\t\t\t};\n\t\t\t\tedges.push(edge);\n\t\t\t}\n\n\t\t\tlastNode = node;\n\t\t\tcurrent = current.base;\n\t\t}\n\n\t\treturn new Model(nodes, edges);\n\t}\n}\n","import { Node, Edge, ClusterNode } from '@swimlane/ngx-graph';\n\nexport class Model {\n\tconstructor(public readonly nodes: Node[], public readonly edges: Edge[], public readonly clusters?: ClusterNode[]) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}